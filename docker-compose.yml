services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile.dev # Use the Dockerfile located in the 'api' folder
    ports:
      - "${API_PORT}:${API_PORT}" # Map the container port dynamically based on the environment variable
    env_file:
      - ./api/.env  # Load environment variables from the .env file for API
    depends_on:
      - mongo # Ensure MongoDB is up before the API starts
    restart: unless-stopped # Ensure the service restarts unless explicitly stopped

  frontend:
    build:
      context: .
      dockerfile: web/Dockerfile # Use the Dockerfile located in the 'frontend' folder
      args:
        API_URL: ${API_URL} # REST API URL 
    restart: unless-stopped # Ensure the service restarts unless explicitly stopped

  mongo:
    image: mongo:6 # Use the official MongoDB image
    container_name: mongo
    ports:
      - "27017:27017"  # Expose MongoDB's default port
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}  # MongoDB root user
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}  # MongoDB root password
    volumes:
      - mongo-data:/data/db # Persist MongoDB data

volumes:
  mongo-data: # Define a named volume to store MongoDB data
